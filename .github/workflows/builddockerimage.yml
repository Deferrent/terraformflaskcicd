name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
  
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: jsamm21/terraformflaskapp:${{ github.sha }}

    - name: Git clone the repository
      uses: actions/checkout@v3

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/terraform.key
        chmod 600 ~/.ssh/terraform.key
        cat >>~/.ssh/config <<END
        Host ec2
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/terraform.key
        END
      env:
        SSH_HOST: ${{ secrets.EC2_SSH_HOST }}
        SSH_USER: ${{ secrets.EC2_SSH_USER }}
        SSH_KEY: ${{ secrets.EC2_SSH_KEY }} 
    
    - name: Start the server
      if: ${{ always() }}
      run: ssh ec2 'sudo systemctl start my-application'



    # - name: Stop and remove existing Docker container
    #   run: |
    #     # ssh -i ${{ secrets.EC2_SSH_KEY }} ${{ steps.ssh-into-ec2.outputs.ip }}
    #     #   docker stop terraformflaskapp
    #     #   docker rm terraformflaskapp


    # - name: Start new Docker container
    #   run: |
    #     ssh -i ${{ secrets.EC2_SSH_KEY }} ${{ steps.ssh-into-ec2.outputs.ip }}
    #       docker run -d --name terraformflaskapp -p 80:5000 jsamm21/terraformflaskapp:${{ env.SHA }}